RuleSet{
	name={}
	readOnly={0}
	origin={}
	global={0}
	comment={}
	objrenamed={0}
	baseid={0}
	incid={1}
	featureLevel={16}
	useAppRules={0}
	id={}
	transobj={7.1.1.1}
	creator={}
	localCascade={0}
	allowRID={0}
	allowAppRules={0}
	prefixmatch={
	}
	rulesettype={}
	loadsets={}
	name={}
	readOnly={0}
	origin={}
	global={0}
	comment={}
	netprefixobj={
	}
	netprefixobj6={
	}
	netobj={
		NetESet{
			name={Trusted LAN Networks}
			readOnly={1}
			origin={}
			global={0}
			comment={All trusted local area networks}
			extlist={
				ExtDef{
					name={ManagementNetwork}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={boxnet.conf}
					sectionPattern={boxnet}
					addrKey={ip}
					maskKey={mask}
					encoding={maskint}
					conditions={realm=1}
				}
				ExtDef{
					name={LocalNetworks}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={boxnet.conf}
					sectionPattern={addnet_*}
					addrKey={ip}
					maskKey={mask}
					encoding={maskint}
					conditions={realm=1}
				}
				ExtDef{
					name={Routes}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={boxnet.conf}
					sectionPattern={addroute_*}
					addrKey={target}
					maskKey={}
					encoding={addr}
					conditions={realm=1|type=dev}
				}
				ExtDef{
					name={LowLevelTunnels}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={boxnet.conf}
					sectionPattern={tunnel_*}
					addrKey={target}
					maskKey={}
					encoding={addr}
					conditions={realm=1}
				}
			}
		}
		NetESet{
			name={Trusted Next-Hop Networks}
			readOnly={1}
			origin={}
			global={0}
			comment={All trusted networks reachable through a next-hop}
			extlist={
				ExtDef{
					name={NextHopRoutes}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={boxnet.conf}
					sectionPattern={addroute_*}
					addrKey={target}
					maskKey={}
					encoding={addr}
					conditions={realm=1|type=*gw}
				}
			}
		}
		NetSet{
			name={Trusted LAN}
			readOnly={0}
			origin={}
			global={0}
			comment={All network addresses that have a trusted classification. This automatically applies to the management network.}
			list={
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={All trusted local area networks}
					ref={Trusted LAN Networks}
				}
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={All trusted networks reachable through a next-hop}
					ref={Trusted Next-Hop Networks}
				}
			}
			neglist={
			}
		}
		NetESet{
			name={WIFI Network}
			readOnly={1}
			origin={}
			global={0}
			comment={The network associated with Wi-Fi AP on interface ath0}
			extlist={
				ExtDef{
					name={Routes}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={boxnet.conf}
					sectionPattern={addroute_*}
					addrKey={target}
					maskKey={}
					encoding={addr}
					conditions={dev=ath0|type=dev}
				}
			}
		}
		NetSet{
			name={connect.barracuda.com}
			readOnly={0}
			origin={}
			global={0}
			comment={}
			list={
			}
			neglist={
			}
			netType={5}
		}
		NetESet{
			name={ATD Quarantine}
			readOnly={1}
			origin={}
			global={0}
			comment={IP addresses and users that downloaded malicious content}
			extlist={
				ExtDef{
					name={abc}
					readOnly={1}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={dynATDBlacklist.conf}
					sectionPattern={/}
					addrKey={blacklist}
					maskKey={}
					encoding={addr}
					conditions={}
				}
			}
		}
		NetSet{
			name={Any}
			readOnly={0}
			origin={}
			global={0}
			comment={All IPv4 addresses}
			list={
				NetEntry{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					addr={0.0.0.0/32}
				}
			}
			neglist={
			}
		}
		NetESet{
			name={Control Center}
			readOnly={1}
			origin={}
			global={0}
			comment={CC server and additional IP addresses}
			extlist={
				ExtDef{
					name={CCServerIP}
					readOnly={1}
					origin={}
					global={0}
					comment={Control Center server address}
					sourceType={boxconf}
					sourceFile={masterpub.conf}
					sectionPattern={/}
					addrKey={masterip}
					maskKey={}
					encoding={addr}
					conditions={}
				}
				ExtDef{
					name={CCAdditionalIPs}
					readOnly={1}
					origin={}
					global={0}
					comment={Control Center additional addresses}
					sourceType={boxconf}
					sourceFile={masterpub.conf}
					sectionPattern={/}
					addrKey={mastersrc}
					maskKey={}
					encoding={addr}
					conditions={}
				}
				ExtDef{
					name={CCPreferredIP}
					readOnly={1}
					origin={}
					global={0}
					comment={Control Center preferred address}
					sourceType={boxconf}
					sourceFile={box.conf}
					sectionPattern={/}
					addrKey={prefmaster}
					maskKey={}
					encoding={addr}
					conditions={usemaster=1}
				}
			}
		}
		NetESet{
			name={DHCP1 Local IP}
			readOnly={1}
			origin={}
			global={0}
			comment={Assigned local IP for established DHCP-based link on dhcp1}
			extlist={
				ExtDef{
					name={DHCP1 Local IP}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={dynDHCPnet1.conf}
					sectionPattern={/}
					addrKey={ipaddr}
					maskKey={}
					encoding={addr}
					conditions={}
				}
			}
		}
		NetESet{
			name={BoxACL}
			readOnly={1}
			origin={}
			global={0}
			comment={The management ACL networks as configured in Settings}
			extlist={
				ExtDef{
					name={ACL}
					readOnly={1}
					origin={}
					global={0}
					comment={ACL Networks from Settings}
					sourceType={boxconf}
					sourceFile={boxadm.conf}
					sectionPattern={/}
					addrKey={acllist}
					maskKey={}
					encoding={addr}
					conditions={}
				}
				ExtDef{
					name={Paranoia}
					readOnly={1}
					origin={}
					global={0}
					comment={ACL Fallback}
					sourceType={boxconf}
					sourceFile={dynACL.conf}
					sectionPattern={/}
					addrKey={acllist}
					maskKey={}
					encoding={addr}
					conditions={bakpol=1}
				}
				ExtDef{
					name={CCServerIP}
					readOnly={1}
					origin={}
					global={0}
					comment={Control Center Server Address}
					sourceType={boxconf}
					sourceFile={masterpub.conf}
					sectionPattern={/}
					addrKey={masterip}
					maskKey={}
					encoding={addr}
					conditions={}
				}
				ExtDef{
					name={CCAdditionalIPs}
					readOnly={1}
					origin={}
					global={0}
					comment={Control Center Additional Addresses}
					sourceType={boxconf}
					sourceFile={masterpub.conf}
					sectionPattern={/}
					addrKey={mastersrc}
					maskKey={}
					encoding={addr}
					conditions={}
				}
				ExtDef{
					name={CCPreferredIP}
					readOnly={1}
					origin={}
					global={0}
					comment={Control Center Preferred Address}
					sourceType={boxconf}
					sourceFile={box.conf}
					sectionPattern={/}
					addrKey={prefmaster}
					maskKey={}
					encoding={addr}
					conditions={usemaster=1}
				}
			}
		}
		NetESet{
			name={Management IP}
			readOnly={1}
			origin={}
			global={0}
			comment={The firewall's management IP addresses}
			extlist={
				ExtDef{
					name={Management IP}
					readOnly={1}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={boxnet.conf}
					sectionPattern={boxnet}
					addrKey={ip}
					maskKey={}
					encoding={addr}
					conditions={}
				}
				ExtDef{
					name={Additional Local Management IPs}
					readOnly={1}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={boxnet.conf}
					sectionPattern={addnet_*}
					addrKey={ip}
					maskKey={}
					encoding={addr}
					conditions={bind=y}
				}
			}
		}
		NetESet{
			name={Service IPs}
			readOnly={1}
			origin={}
			global={0}
			comment={All configured server IP addresses}
			extlist={
				ExtDef{
					name={ACL}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={serverconf}
					sourceFile={}
					sectionPattern={/}
					addrKey={firstip}
					maskKey={}
					encoding={addr}
					conditions={}
				}
				ExtDef{
					name={ACL}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={serverconf}
					sourceFile={}
					sectionPattern={/}
					addrKey={secondip}
					maskKey={}
					encoding={addr}
					conditions={}
				}
				ExtDef{
					name={ACL}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={serverconf}
					sourceFile={}
					sectionPattern={/}
					addrKey={addip}
					maskKey={}
					encoding={addr}
					conditions={}
				}
			}
		}
		NetESet{
			name={DHCP2 Local IP}
			readOnly={1}
			origin={}
			global={0}
			comment={Assigned local IP for established DHCP-based link on dhcp2}
			extlist={
				ExtDef{
					name={DHCP-Local IP2}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={dynDHCPnet2.conf}
					sectionPattern={/}
					addrKey={ipaddr}
					maskKey={}
					encoding={addr}
					conditions={}
				}
			}
		}
		NetESet{
			name={DHCP3 Local IP}
			readOnly={1}
			origin={}
			global={0}
			comment={Assigned local IP for established DHCP-based link on dhcp3}
			extlist={
				ExtDef{
					name={DHCP-Local IP3}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={dynDHCPnet3.conf}
					sectionPattern={/}
					addrKey={ipaddr}
					maskKey={}
					encoding={addr}
					conditions={}
				}
			}
		}
		NetESet{
			name={DHCP4 Local IP}
			readOnly={1}
			origin={}
			global={0}
			comment={Assigned local IP for established DHCP-based link on dhcp4}
			extlist={
				ExtDef{
					name={DHCP-Local IP4}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={dynDHCPnet4.conf}
					sectionPattern={/}
					addrKey={ipaddr}
					maskKey={}
					encoding={addr}
					conditions={}
				}
			}
		}
		NetESet{
			name={DHCP5 Local IP}
			readOnly={1}
			origin={}
			global={0}
			comment={Assigned local IP for established DHCP-based link on dhcp5}
			extlist={
				ExtDef{
					name={DHCP-Local IP5}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={dynDHCPnet5.conf}
					sectionPattern={/}
					addrKey={ipaddr}
					maskKey={}
					encoding={addr}
					conditions={}
				}
			}
		}
		NetESet{
			name={DHCP6 Local IP}
			readOnly={1}
			origin={}
			global={0}
			comment={Assigned local IP for established DHCP-based link on dhcp6}
			extlist={
				ExtDef{
					name={DHCP-Local IP6}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={dynDHCPnet6.conf}
					sectionPattern={/}
					addrKey={ipaddr}
					maskKey={}
					encoding={addr}
					conditions={}
				}
			}
		}
		NetESet{
			name={DSL1 Local IP}
			readOnly={1}
			origin={}
			global={0}
			comment={Assigned local IP for established DSL link through ppp1}
			extlist={
				ExtDef{
					name={DSL Local IP1}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={dynADSLnet1.conf}
					sectionPattern={/}
					addrKey={ipaddr}
					maskKey={}
					encoding={addr}
					conditions={}
				}
			}
		}
		NetESet{
			name={DSL2 Local IP}
			readOnly={1}
			origin={}
			global={0}
			comment={Assigned local IP for established DSL link through ppp2}
			extlist={
				ExtDef{
					name={DSL Local IP2}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={dynADSLnet2.conf}
					sectionPattern={/}
					addrKey={ipaddr}
					maskKey={}
					encoding={addr}
					conditions={}
				}
			}
		}
		NetESet{
			name={DSL3 Local IP}
			readOnly={1}
			origin={}
			global={0}
			comment={Assigned local IP for established DSL link through ppp3}
			extlist={
				ExtDef{
					name={DSL Local IP3}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={dynADSLnet3.conf}
					sectionPattern={/}
					addrKey={ipaddr}
					maskKey={}
					encoding={addr}
					conditions={}
				}
			}
		}
		NetESet{
			name={DSL4 Local IP}
			readOnly={1}
			origin={}
			global={0}
			comment={Assigned local IP for established DSL link through ppp4}
			extlist={
				ExtDef{
					name={DSL Local IP4}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={dynADSLnet4.conf}
					sectionPattern={/}
					addrKey={ipaddr}
					maskKey={}
					encoding={addr}
					conditions={}
				}
			}
		}
		NetESet{
			name={WWAN Local IP}
			readOnly={1}
			origin={}
			global={0}
			comment={Assigned local IP for an established WWAN link}
			extlist={
				ExtDef{
					name={WWAN Local IP}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={dynUMTSnet1.conf}
					sectionPattern={/}
					addrKey={ipaddr}
					maskKey={}
					encoding={addr}
					conditions={}
				}
			}
		}
		NetSet{
			name={All Firewall IPs}
			readOnly={0}
			origin={}
			global={0}
			comment={All addresses configured or dynamically assigned on the firewall}
			list={
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Management IP}
				}
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Service IPs}
				}
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={DHCP1 Local IP}
				}
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={DHCP2 Local IP}
				}
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={DHCP3 Local IP}
				}
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={DHCP4 Local IP}
				}
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={DHCP5 Local IP}
				}
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={DHCP6 Local IP}
				}
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={DSL1 Local IP}
				}
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={DSL2 Local IP}
				}
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={DSL3 Local IP}
				}
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={DSL4 Local IP}
				}
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={WWAN Local IP}
				}
			}
			neglist={
			}
		}
		NetSet{
			name={QUICKSTART-green-SUBNET-DB}
			readOnly={0}
			origin={}
			global={0}
			comment={}
			list={
				NetEntry{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					addr={172.16.101.192/6}
				}
			}
			neglist={
			}
		}
		NetSet{
			name={QUICKSTART-green-SUBNET-WAF}
			readOnly={0}
			origin={}
			global={0}
			comment={}
			list={
				NetEntry{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					addr={172.16.101.64/6}
				}
			}
			neglist={
			}
		}
		NetSet{
			name={QUICKSTART-green-SUBNET-WEB}
			readOnly={0}
			origin={}
			global={0}
			comment={}
			list={
				NetEntry{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					addr={172.16.101.128/6}
				}
			}
			neglist={
			}
		}
		NetSet{
			name={QUICKSTART-green-BACKEND}
			readOnly={0}
			origin={}
			global={0}
			comment={}
			list={
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={QUICKSTART-green-SUBNET-DB}
				}
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={QUICKSTART-green-SUBNET-WAF}
				}
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={QUICKSTART-green-SUBNET-WEB}
				}
			}
			neglist={
			}
		}
		NetSet{
			name={Internet}
			readOnly={0}
			origin={}
			global={0}
			comment={All routed IPv4 addresses}
			list={
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any}
				}
			}
			neglist={
				NetEntry{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					addr={10.0.0.0/24}
				}
				NetEntry{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					addr={172.16.0.0/20}
				}
				NetEntry{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					addr={192.168.0.0/16}
				}
			}
		}
		NetSet{
			name={VPN-Networks}
			readOnly={0}
			origin={}
			global={0}
			comment={All networks reachable through VPN site-to-site tunnel interface vpn0}
			list={
				NetEntry{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={All networks accessible through VPN interface vpn0}
					addr={0.0.0.0/32}
					dev={vpn0}
				}
			}
			neglist={
			}
		}
		NetSet{
			name={VPN-Local-Networks}
			readOnly={0}
			origin={}
			global={0}
			comment={All locally defined networks for Site-2-Site VPN}
			list={
				NetEntry{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					addr={0.0.0.0/32}
				}
			}
			neglist={
			}
		}
		NetSet{
			name={VPN-Remote-Networks}
			readOnly={0}
			origin={}
			global={0}
			comment={All defined remote networks for Site-2-Site VPN}
			list={
				NetEntry{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					addr={0.0.0.0/32}
					dev={vpn0}
				}
			}
			neglist={
			}
		}
	}
	srvobj={
		ServiceSet{
			name={HTTPS}
			readOnly={0}
			origin={}
			global={0}
			comment={HTTP protocol over TLS/SSL}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 443}
					sessionTimeout={86400}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					srvText={https}
					detectPolicy={1}
					listingPolicy={0}
					detectAllowBits2={1073741824,0,0,0,0,0}
				}

			}
		}
		ServiceSet{
			name={ScreenConnect}
			readOnly={0}
			origin={}
			global={0}
			comment={Ports used for Barracuda ScreenConnect for remote assistance}
			list={
				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={HTTPS}
				}

				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 8040}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
				}

				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 8041}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
				}

			}
		}
		ServiceSet{
			name={FTP}
			readOnly={0}
			origin={}
			global={0}
			comment={FTP using plugin module}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 21}
					sessionTimeout={86400}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={ftp}
					srvText={ftp}
					detectPolicy={1}
					listingPolicy={0}
					detectAllowBits2={16777216,0,0,0,0,0}
				}

			}
		}
		ServiceSet{
			name={FTPS}
			readOnly={0}
			origin={}
			global={0}
			comment={Implicit FTPS using FTP firewall plugin. SSL Interception required.}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 990}
					sessionTimeout={86400}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={ftp}
					srvText={ftp}
					detectAllowBits2={16777216,0,0,0,0,0}
				}

			}
		}
		ServiceSet{
			name={RCMD}
			readOnly={0}
			origin={}
			global={0}
			comment={Remote shell, remote exec, and remote login services}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 514}
					sessionTimeout={86400}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={512}
					topClientPort={1023}
					ownProc={0}
					pluginModule={rsh}
					srvText={rsh}
				}

				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 512}
					sessionTimeout={86400}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={512}
					topClientPort={1023}
					ownProc={0}
					pluginModule={}
					srvText={rexec}
				}

				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 513}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					srvText={rlogin}
				}

			}
		}
		ServiceSet{
			name={Any-TCP}
			readOnly={0}
			origin={}
			global={0}
			comment={All TCP ports}
			list={
				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={FTP connection with plugin module}
					ref={FTP}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={FTPS connection with plugin module}
					ref={FTPS}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={RCMD}
				}

				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ *}
					sessionTimeout={86400}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
				}

			}
		}
		ServiceSet{
			name={Any-UDP}
			readOnly={0}
			origin={}
			global={0}
			comment={All UDP ports}
			list={
				ServiceEntryUDP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ *}
					sessionTimeout={60}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={2048}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					 udpReversedAny={0}
				}

			}
		}
		ServiceSet{
			name={ICMP}
			readOnly={0}
			origin={}
			global={0}
			comment={ICMP-ECHO service limited to 10000 bytes and 10ms interval}
			list={
				ServiceEntryEcho{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sessionTimeout={20}
					balancedTimeout={10}
					 minDelay={10}
					 maxSize={10000}
				}

			}
		}
		ServiceSet{
			name={Any}
			readOnly={0}
			origin={}
			global={0}
			comment={All TCP, UDP, and ICMP services and other IP protocols}
			list={
				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any-TCP}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any-UDP}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={ICMP}
				}

				ServiceEntryOther{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={}
					sessionTimeout={120}
					balancedTimeout={120}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					 proto={0}
				}

			}
		}
		ServiceSet{
			name={NGF-MGMT-EVENT-U}
			readOnly={0}
			origin={}
			global={0}
			comment={Port used by event to receive event messages}
			list={
				ServiceEntryUDP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 808}
					sessionTimeout={60}
					balancedTimeout={30}
					writeTimeout={60}
					botClientPort={0}
					topClientPort={0}
					ownProc={0}
					pluginModule={}
					 udpReversedAny={0}
				}

			}
		}
		ServiceSet{
			name={NGF-MGMT-STATUS}
			readOnly={0}
			origin={}
			global={0}
			comment={Port for access to control status service for HA and CC states}
			list={
				ServiceEntryUDP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 801}
					sessionTimeout={60}
					balancedTimeout={30}
					writeTimeout={60}
					botClientPort={0}
					topClientPort={0}
					ownProc={0}
					pluginModule={}
					 udpReversedAny={0}
				}

			}
		}
		ServiceSet{
			name={NGF-MGMT-DIST}
			readOnly={0}
			origin={}
			global={0}
			comment={Port for access to data upload service}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 805}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
				}

				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 845}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
				}

			}
		}
		ServiceSet{
			name={NGF-MGMT-CONF}
			readOnly={0}
			origin={}
			global={0}
			comment={Port for access to the configuration service}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 809}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
				}

			}
		}
		ServiceSet{
			name={NGF-OP-EVENT}
			readOnly={0}
			origin={}
			global={0}
			comment={Listen port of a central event service}
			list={
				ServiceEntryUDP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 811}
					sessionTimeout={60}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					 udpReversedAny={0}
				}

			}
		}
		ServiceSet{
			name={NGF-OP-STATUS}
			readOnly={0}
			origin={}
			global={0}
			comment={Listen port of a central status collection service}
			list={
				ServiceEntryUDP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 810}
					sessionTimeout={60}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					 udpReversedAny={0}
				}

			}
		}
		ServiceSet{
			name={SSH}
			readOnly={0}
			origin={}
			global={0}
			comment={Secure shell}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 22}
					sessionTimeout={86400}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					srvText={ssh}
					detectPolicy={1}
					listingPolicy={0}
					detectAllowBits2={144115188075855872,0,0,0,0,0}
				}

			}
		}
		ServiceSet{
			name={NGF-MGMT-BOX-CC}
			readOnly={0}
			origin={}
			global={0}
			comment={Port for access by CC to centrally managed box}
			list={
				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-MGMT-EVENT-U}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-MGMT-STATUS}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-MGMT-DIST}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-MGMT-CONF}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-OP-EVENT}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-OP-STATUS}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={SSH}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={ICMP}
				}

			}
		}
		ServiceSet{
			name={NGF-MGMT-CTRL}
			readOnly={0}
			origin={}
			global={0}
			comment={Port for access to control service}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 801}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
				}

			}
		}
		ServiceSet{
			name={NGF-MGMT-DHCP}
			readOnly={0}
			origin={}
			global={0}
			comment={Port for access to DHCP service}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 816}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
				}

			}
		}
		ServiceSet{
			name={NGF-MGMT-EVENT}
			readOnly={0}
			origin={}
			global={0}
			comment={Port for access to event service}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 808}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
				}

			}
		}
		ServiceSet{
			name={NGF-MGMT-FW}
			readOnly={0}
			origin={}
			global={0}
			comment={Port for access to firewall service}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 688}
					sessionTimeout={86400}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
				}

			}
		}
		ServiceSet{
			name={NGF-MGMT-LOG}
			readOnly={0}
			origin={}
			global={0}
			comment={Port for access to log service}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 803}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
				}

			}
		}
		ServiceSet{
			name={NGF-MGMT-MAIL}
			readOnly={0}
			origin={}
			global={0}
			comment={Port for access to SMTP mail gateway service}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 815}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					srvText={ngf-mgmt-mail}
				}

			}
		}
		ServiceSet{
			name={NGF-MGMT-STAT}
			readOnly={0}
			origin={}
			global={0}
			comment={Port for access to statistics service}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 807}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
				}

			}
		}
		ServiceSet{
			name={NGF-MGMT-VPN}
			readOnly={0}
			origin={}
			global={0}
			comment={Port for access to VPN service}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 814}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
				}

			}
		}
		ServiceSet{
			name={NGF-MGMT-POL}
			readOnly={0}
			origin={}
			global={0}
			comment={Port for access to access control service}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 844}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
				}

			}
		}
		ServiceSet{
			name={NGF-MGMT-PROXY}
			readOnly={0}
			origin={}
			global={0}
			comment={Ports for access to the proxy service GUIs}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={SSL Proxy GUI}
					portLimit={ 843}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
				}

				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={HTTP proxy GUI}
					portLimit={ 880}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
				}

			}
		}
		ServiceSet{
			name={NGF-MGMT-AUDIT}
			readOnly={0}
			origin={}
			global={0}
			comment={Port for access to the audit service}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 680}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
				}

			}
		}
		ServiceSet{
			name={NGF-MGMT-WIFI}
			readOnly={0}
			origin={}
			global={0}
			comment={GUI access to access point/Wi-Fi service}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 888}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
				}

			}
		}
		ServiceSet{
			name={NGF-MGMT-BOX}
			readOnly={0}
			origin={}
			global={0}
			comment={Port for access to regular box}
			list={
				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-MGMT-CONF}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-MGMT-CTRL}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-MGMT-DHCP}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-MGMT-EVENT}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-MGMT-FW}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-MGMT-LOG}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-MGMT-MAIL}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-MGMT-STAT}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-MGMT-VPN}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-MGMT-POL}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={SSH}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={ICMP}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-MGMT-PROXY}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-MGMT-AUDIT}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-MGMT-WIFI}
				}

			}
		}
		ServiceSet{
			name={HTTP}
			readOnly={0}
			origin={}
			global={0}
			comment={HTTP service}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 80}
					sessionTimeout={86400}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					srvText={http}
					detectPolicy={1}
					listingPolicy={0}
					detectAllowBits2={524288,0,0,0,0,0}
				}

			}
		}
		ServiceSet{
			name={HTTP+S}
			readOnly={0}
			origin={}
			global={0}
			comment={HTTP + HTTP protocol over TLS/SSL}
			list={
				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={HTTP}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={HTTPS}
				}

			}
		}
		ServiceSet{
			name={NGF-VPN}
			readOnly={0}
			origin={}
			global={0}
			comment={Ports and protocols that may be used by the Barracuda CloudGen Firewall proprietary TINA-VPN.}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 691}
					sessionTimeout={86400}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					srvText={ngf-op-vpn}
				}

				ServiceEntryUDP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 691}
					sessionTimeout={120}
					balancedTimeout={120}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					srvText={ngf-op-vpn}
					 udpReversedAny={0}
				}

			}
		}
		ServiceSet{
			name={NGF-VPN-HTTPS}
			readOnly={0}
			origin={}
			global={0}
			comment={Ports and protocols that may be used by the Barracuda CloudGen Firewall proprietary TINA-VPN plus HTTPS.}
			list={
				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={HTTPS}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-VPN}
				}

			}
		}
		ServiceSet{
			name={IPSEC-VPN}
			readOnly={0}
			origin={}
			global={0}
			comment={Set of services used by IPSec}
			list={
				ServiceEntryOther{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={}
					sessionTimeout={120}
					balancedTimeout={120}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					 proto={50}
				}

				ServiceEntryOther{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={}
					sessionTimeout={120}
					balancedTimeout={120}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					 proto={51}
				}

				ServiceEntryUDP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 500}
					sessionTimeout={120}
					balancedTimeout={120}
					writeTimeout={60}
					botClientPort={500}
					topClientPort={500}
					ownProc={0}
					pluginModule={}
					srvText={ike}
					 udpReversedAny={0}
				}

				ServiceEntryUDP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 4500}
					sessionTimeout={60}
					balancedTimeout={30}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					srvText={ikeNAT-T}
					 udpReversedAny={0}
				}

			}
		}
		ServiceSet{
			name={DNS}
			readOnly={0}
			origin={}
			global={0}
			comment={Domain name service}
			list={
				ServiceEntryUDP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 53}
					sessionTimeout={60}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					srvText={dns}
					detectPolicy={1}
					listingPolicy={0}
					detectAllowBits2={33554432,0,0,0,0,0}
					 udpReversedAny={0}
				}

				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 53}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					srvText={dns}
					detectPolicy={1}
					listingPolicy={0}
					detectAllowBits2={33554432,0,0,0,0,0}
				}

			}
		}
	}
	appobj={
	}
	contentobj={
	}
	protoobj={
	}
	filterobj={
	}
	filtergroupobj={
	}
	parpobj={
	}
	devgroupobj={
		DevGroup{
			name={Matching}
			readOnly={0}
			origin={}
			global={0}
			comment={Select this object to make use of IP spoofing protection.}
			list={match}
		}
		DevGroup{
			name={DHCP}
			readOnly={0}
			origin={}
			global={0}
			comment={Receiving interface must be a DHCP interface.}
			list={dhcp,dhcp2,dhcp3,dhcp4,dhcp5,dhcp6}
		}
		DevGroup{
			name={VPNClients}
			readOnly={0}
			origin={}
			global={0}
			comment={Receiving traffic must be Barracuda Network Access Client traffic.}
			list={pvpn0}
		}
	}
	icmpparamobj={
	}
	connobj={
		ConnStd{
			name={Dynamic NAT}
			readOnly={0}
			origin={}
			global={0}
			comment={Source NAT using local IP address obtained from a routing lookup to the destination}
			connTimeout={30}
			connIPType={PROXY_DYNAMIC}
			connIP={0.0.0.0}
			device={}
			connMask={0}
			samePort={0}
			cycleType={0}
			cyclePrimWeight={1}
		}
		ConnStd{
			name={Original Source IP}
			readOnly={0}
			origin={}
			global={0}
			comment={Connection is established using the original source IP.}
			connTimeout={30}
			connIPType={CLIENT}
			connIP={0.0.0.0}
			device={}
			connMask={0}
			samePort={1}
			cycleType={0}
			cyclePrimWeight={1}
		}
	}
	rules={
		Rule{
			name={BARRACUDA-CUDA-CONNECT}
			readOnly={0}
			origin={}
			global={0}
			comment={CudaConnect is a web-based remote support tool to help Barracuda technicians assist you via ScreenConnect and CudaConnect Chat. The CudaConnect website is https://connect.barracuda.com}
			srcExplicit={
				NetSet{
					name={BARRACUDA-CUDA-CONNECT:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					list={
						NetRef{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={Trusted LAN}
						}
						NetRef{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={WIFI Network}
						}
					}
					neglist={
					}
				}
			}
			dst={
				NetRef{
					name={BARRACUDA-CUDA-CONNECT:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={connect.barracuda.com}
				}
			}
			srv={
				ServiceRef{
					name={BARRACUDA-CUDA-CONNECT:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={ScreenConnect}
				}
			}
			action={
				ActionPass{
					name={BARRACUDA-CUDA-CONNECT:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					conn={
						ConnRef{
							name={BARRACUDA-CUDA-CONNECT:action:conn}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={Dynamic NAT}
						}
					}
					bothWays={0}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={0}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={0}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
			ipsPolicy={1}
			appPolicyBits={7}
		}
		Rule{
			name={BlockATDQuarantine}
			readOnly={0}
			origin={}
			global={0}
			comment={Blocks infected hosts that are blacklisted by ATD}
			src={
				NetRef{
					name={BlockATDQuarantine:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={ATD Quarantine}
				}
			}
			dst={
				NetRef{
					name={BlockATDQuarantine:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any}
				}
			}
			srv={
				ServiceRef{
					name={BlockATDQuarantine:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any}
				}
			}
			action={
				ActionBlock{
					name={BlockATDQuarantine:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					serverity={0}
					sendDeny={0}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={1}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			showBlockPage={1}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={-1}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
		}
		Rule{
			name={CLOUD-CC-MGMT-COMM}
			readOnly={0}
			origin={}
			global={0}
			comment={Redirect incoming Control Center management traffic on the DHCP interface to the management IP address.}
			src={
				NetRef{
					name={CLOUD-CC-MGMT-COMM:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Control Center}
				}
			}
			dst={
				NetRef{
					name={CLOUD-CC-MGMT-COMM:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={DHCP1 Local IP}
				}
			}
			srv={
				ServiceRef{
					name={CLOUD-CC-MGMT-COMM:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-MGMT-BOX-CC}
				}
			}
			action={
				ActionLocalRedirect{
					name={CLOUD-CC-MGMT-COMM:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					addr={127.0.0.2}
					proxyArp={0}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={1}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={0}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
			ipsPolicy={1}
			appPolicyBits={7}
		}
		Rule{
			name={CLOUD-SETUP-MGMT-ACCESS}
			readOnly={0}
			origin={}
			global={0}
			comment={Redirect incoming management traffic on the DHCP interface to the management IP address.}
			src={
				NetRef{
					name={CLOUD-SETUP-MGMT-ACCESS:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={BoxACL}
				}
			}
			dst={
				NetRef{
					name={CLOUD-SETUP-MGMT-ACCESS:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={DHCP1 Local IP}
				}
			}
			srvExplicit={
				ServiceSet{
					name={CLOUD-SETUP-MGMT-ACCESS:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					list={
						ServiceRef{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={NGF-MGMT-BOX}
						}

					}
				}
			}
			action={
				ActionLocalRedirect{
					name={CLOUD-SETUP-MGMT-ACCESS:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					addr={127.0.0.2}
					proxyArp={0}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={DHCP}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={1}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={1}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={0}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
			appPolicyBits={7}
		}
		Rule{
			name={CLOUD-SETUP-WEBUI-MGMT-ACCESS}
			readOnly={0}
			origin={}
			global={0}
			comment={Redirect incoming management traffic to the WebUI on the DHCP interface to the management IP address.}
			src={
				NetRef{
					name={CLOUD-SETUP-WEBUI-MGMT-ACCESS:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={BoxACL}
				}
			}
			dst={
				NetRef{
					name={CLOUD-SETUP-WEBUI-MGMT-ACCESS:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={DHCP1 Local IP}
				}
			}
			srvExplicit={
				ServiceSet{
					name={CLOUD-SETUP-WEBUI-MGMT-ACCESS:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					list={
						ServiceRef{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={HTTP+S}
						}

					}
				}
			}
			action={
				ActionLocalRedirect{
					name={CLOUD-SETUP-WEBUI-MGMT-ACCESS:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					addr={127.0.0.2}
					proxyArp={0}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={DHCP}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={1}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={1}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={0}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
			appPolicyBits={7}
		}
		Rule{
			name={CLOUD-SERVICE-VPN-ACCESS}
			readOnly={0}
			origin={}
			global={0}
			comment={Redirect TINA VPN connetions on ports TCP/UDP 691 and TCP 443 to the VPN service listening on the virtual server IP address.}
			src={
				NetRef{
					name={CLOUD-SERVICE-VPN-ACCESS:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any}
				}
			}
			dst={
				NetRef{
					name={CLOUD-SERVICE-VPN-ACCESS:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={All Firewall IPs}
				}
			}
			srv={
				ServiceRef{
					name={CLOUD-SERVICE-VPN-ACCESS:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={NGF-VPN-HTTPS}
				}
			}
			action={
				ActionLocalRedirect{
					name={CLOUD-SERVICE-VPN-ACCESS:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					addr={127.0.0.9}
					proxyArp={0}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={1}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={0}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
			appPolicyBits={7}
		}
		Rule{
			name={CLOUD-SERVICE-VPN-ACCESS-IPSEC}
			readOnly={0}
			origin={}
			global={0}
			comment={Redirect IPsec VPN connetions to the VPN service listening on the virtual server IP address.}
			src={
				NetRef{
					name={CLOUD-SERVICE-VPN-ACCESS-IPSEC:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any}
				}
			}
			dst={
				NetRef{
					name={CLOUD-SERVICE-VPN-ACCESS-IPSEC:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={All Firewall IPs}
				}
			}
			srv={
				ServiceRef{
					name={CLOUD-SERVICE-VPN-ACCESS-IPSEC:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={IPSEC-VPN}
				}
			}
			action={
				ActionLocalRedirect{
					name={CLOUD-SERVICE-VPN-ACCESS-IPSEC:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					addr={127.0.0.9}
					proxyArp={0}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={1}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={0}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
			appPolicyBits={7}
		}
		Rule{
			name={QUICKSTART-green}
			readOnly={0}
			origin={}
			global={0}
			comment={}
			src={
				NetRef{
					name={QUICKSTART-green:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			dst={
				NetRef{
					name={QUICKSTART-green:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			srv={
				ServiceRef{
					name={QUICKSTART-green:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			action={
				ActionGroup{
					name={QUICKSTART-green:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					group={New Section}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={0}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={0}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
			dstVrf={65534}
		}
		Rule{
			name={QUICKSTART-INBOUND-SSH-WEB}
			readOnly={0}
			origin={}
			global={0}
			comment={}
			src={
				NetRef{
					name={QUICKSTART-INBOUND-SSH-WEB:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={BoxACL}
				}
			}
			dst={
				NetRef{
					name={QUICKSTART-INBOUND-SSH-WEB:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={All Firewall IPs}
				}
			}
			srvExplicit={
				ServiceSet{
					name={QUICKSTART-INBOUND-SSH-WEB:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					list={
						ServiceEntryTCP{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							portLimit={ 8444}
							sessionTimeout={86400}
							balancedTimeout={0}
							writeTimeout={60}
							botClientPort={1024}
							topClientPort={65535}
							ownProc={0}
							pluginModule={}
						}

					}
				}
			}
			action={
				ActionRedirect{
					name={QUICKSTART-INBOUND-SSH-WEB:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					conn={
						ConnRef{
							name={QUICKSTART-INBOUND-SSH-WEB:action:conn}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={Original Source IP}
						}
					}
					ipList={0 172.16.101.132:22}
					proxyArp={0}
					criticalPort={}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={0}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={-1}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
			appPolicyBits={7}
			dstVrf={65534}
		}
		Rule{
			name={QUICKSTART-INBOUND-SSH-SQL}
			readOnly={0}
			origin={}
			global={0}
			comment={}
			src={
				NetRef{
					name={QUICKSTART-INBOUND-SSH-SQL:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={BoxACL}
				}
			}
			dst={
				NetRef{
					name={QUICKSTART-INBOUND-SSH-SQL:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={All Firewall IPs}
				}
			}
			srvExplicit={
				ServiceSet{
					name={QUICKSTART-INBOUND-SSH-SQL:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					list={
						ServiceEntryTCP{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							portLimit={ 8445}
							sessionTimeout={86400}
							balancedTimeout={0}
							writeTimeout={60}
							botClientPort={1024}
							topClientPort={65535}
							ownProc={0}
							pluginModule={}
						}

					}
				}
			}
			action={
				ActionRedirect{
					name={QUICKSTART-INBOUND-SSH-SQL:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					conn={
						ConnRef{
							name={QUICKSTART-INBOUND-SSH-SQL:action:conn}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={Original Source IP}
						}
					}
					ipList={0 172.16.101.196:22}
					proxyArp={0}
					criticalPort={}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={0}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={-1}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
			appPolicyBits={7}
			dstVrf={65534}
		}
		Rule{
			name={QUICKSTART-OUTBOUND}
			readOnly={0}
			origin={}
			global={0}
			comment={}
			src={
				NetRef{
					name={QUICKSTART-OUTBOUND:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={QUICKSTART-green-BACKEND}
				}
			}
			dst={
				NetRef{
					name={QUICKSTART-OUTBOUND:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Internet}
				}
			}
			srv={
				ServiceRef{
					name={QUICKSTART-OUTBOUND:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any}
				}
			}
			action={
				ActionPass{
					name={QUICKSTART-OUTBOUND:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					conn={
						ConnRef{
							name={QUICKSTART-OUTBOUND:action:conn}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={Dynamic NAT}
						}
					}
					bothWays={0}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={0}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={-1}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
			appPolicyBits={7}
			dstVrf={65534}
		}
		Rule{
			name={QUICKSTART-INTERNAL-WAF-2-WEB}
			readOnly={0}
			origin={}
			global={0}
			comment={}
			src={
				NetRef{
					name={QUICKSTART-INTERNAL-WAF-2-WEB:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={QUICKSTART-green-SUBNET-WAF}
				}
			}
			dst={
				NetRef{
					name={QUICKSTART-INTERNAL-WAF-2-WEB:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={QUICKSTART-green-SUBNET-WEB}
				}
			}
			srvExplicit={
				ServiceSet{
					name={QUICKSTART-INTERNAL-WAF-2-WEB:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					list={
						ServiceEntryTCP{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							portLimit={ 9300}
							sessionTimeout={86400}
							balancedTimeout={0}
							writeTimeout={60}
							botClientPort={1024}
							topClientPort={65535}
							ownProc={0}
							pluginModule={}
						}

						ServiceEntryTCP{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							portLimit={ 9400}
							sessionTimeout={86400}
							balancedTimeout={0}
							writeTimeout={60}
							botClientPort={1024}
							topClientPort={65535}
							ownProc={0}
							pluginModule={}
						}

						ServiceEntryTCP{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							portLimit={ 9500}
							sessionTimeout={86400}
							balancedTimeout={0}
							writeTimeout={60}
							botClientPort={1024}
							topClientPort={65535}
							ownProc={0}
							pluginModule={}
						}

					}
				}
			}
			action={
				ActionPass{
					name={QUICKSTART-INTERNAL-WAF-2-WEB:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					conn={
						ConnRef{
							name={QUICKSTART-INTERNAL-WAF-2-WEB:action:conn}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={Original Source IP}
						}
					}
					bothWays={0}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={0}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={-1}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
			appPolicyBits={7}
			dstVrf={65534}
		}
		Rule{
			name={QUICKSTART-INTERNAL-WEB-2-SQL}
			readOnly={0}
			origin={}
			global={0}
			comment={}
			src={
				NetRef{
					name={QUICKSTART-INTERNAL-WEB-2-SQL:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={QUICKSTART-green-SUBNET-WEB}
				}
			}
			dst={
				NetRef{
					name={QUICKSTART-INTERNAL-WEB-2-SQL:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={QUICKSTART-green-SUBNET-DB}
				}
			}
			srvExplicit={
				ServiceSet{
					name={QUICKSTART-INTERNAL-WEB-2-SQL:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					list={
						ServiceEntryTCP{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							portLimit={ 3306}
							sessionTimeout={86400}
							balancedTimeout={0}
							writeTimeout={60}
							botClientPort={1024}
							topClientPort={65535}
							ownProc={0}
							pluginModule={}
						}

					}
				}
			}
			action={
				ActionPass{
					name={QUICKSTART-INTERNAL-WEB-2-SQL:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					conn={
						ConnRef{
							name={QUICKSTART-INTERNAL-WEB-2-SQL:action:conn}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={Original Source IP}
						}
					}
					bothWays={0}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={0}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={-1}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
			appPolicyBits={7}
			dstVrf={65534}
		}
		Rule{
			name={QUICKSTART-INBOUND-WAF}
			readOnly={0}
			origin={}
			global={0}
			comment={}
			src={
				NetRef{
					name={QUICKSTART-INBOUND-WAF:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={BoxACL}
				}
			}
			dst={
				NetRef{
					name={QUICKSTART-INBOUND-WAF:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={All Firewall IPs}
				}
			}
			srvExplicit={
				ServiceSet{
					name={QUICKSTART-INBOUND-WAF:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					list={
						ServiceEntryTCP{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							portLimit={ 8000}
							sessionTimeout={86400}
							balancedTimeout={0}
							writeTimeout={60}
							botClientPort={1024}
							topClientPort={65535}
							ownProc={0}
							pluginModule={}
						}

						ServiceEntryTCP{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							portLimit={ 8443}
							sessionTimeout={86400}
							balancedTimeout={0}
							writeTimeout={60}
							botClientPort={1024}
							topClientPort={65535}
							ownProc={0}
							pluginModule={}
						}

					}
				}
			}
			action={
				ActionRedirect{
					name={QUICKSTART-INBOUND-WAF:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					conn={
						ConnRef{
							name={QUICKSTART-INBOUND-WAF:action:conn}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={Original Source IP}
						}
					}
					ipList={0 172.16.101.70}
					proxyArp={0}
					criticalPort={}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={1}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={-1}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
			appPolicyBits={7}
			dstVrf={65534}
		}
		Rule{
			name={Access Rules That  Redirect DNS To The Caching DNS Service}
			readOnly={0}
			origin={}
			global={0}
			comment={}
			src={
				NetRef{
					name={Access Rules That  Redirect DNS To The Caching DNS Service:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			dst={
				NetRef{
					name={Access Rules That  Redirect DNS To The Caching DNS Service:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			srv={
				ServiceRef{
					name={Access Rules That  Redirect DNS To The Caching DNS Service:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			action={
				ActionGroup{
					name={Access Rules That  Redirect DNS To The Caching DNS Service:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					group={New Section}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={0}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={0}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
		}
		Rule{
			name={LOCALDNSCACHE}
			readOnly={0}
			origin={}
			global={0}
			comment={Redirects DNS requests from all trusted networks to the caching DNS service}
			src={
				NetRef{
					name={LOCALDNSCACHE:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Trusted LAN}
				}
			}
			dst={
				NetRef{
					name={LOCALDNSCACHE:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any}
				}
			}
			srv={
				ServiceRef{
					name={LOCALDNSCACHE:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={DNS}
				}
			}
			action={
				ActionLocalRedirect{
					name={LOCALDNSCACHE:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					addr={127.0.0.1:53}
					proxyArp={0}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={1}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			p2ppolicy={1}
			p2poverride={1}
			p2pbits={-1073741826,-1,-1,-1,-1,-1,524287,-2048}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={3}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={1}
			reversePolicy={1}
			matchIF={0}
		}
		Rule{
			name={Access Rules that control traffic flows between the LAN (Trusted LAN), Internet, VPN Clients and remote Sites}
			readOnly={0}
			origin={}
			global={0}
			comment={}
			src={
				NetRef{
					name={Access Rules that control traffic flows between the LAN (Trusted LAN), Internet, VPN Clients and remote Sites:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			dst={
				NetRef{
					name={Access Rules that control traffic flows between the LAN (Trusted LAN), Internet, VPN Clients and remote Sites:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			srv={
				ServiceRef{
					name={Access Rules that control traffic flows between the LAN (Trusted LAN), Internet, VPN Clients and remote Sites:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			action={
				ActionGroup{
					name={Access Rules that control traffic flows between the LAN (Trusted LAN), Internet, VPN Clients and remote Sites:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					group={New Section}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={0}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={0}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
		}
		Rule{
			name={LAN-2-INTERNET}
			readOnly={0}
			origin={}
			global={0}
			comment={Allows Internet access from trusted LAN for typical applications}
			srcExplicit={
				NetSet{
					name={LAN-2-INTERNET:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					list={
						NetRef{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={Trusted LAN}
						}
					}
					neglist={
					}
				}
			}
			dstExplicit={
				NetSet{
					name={LAN-2-INTERNET:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					list={
						NetRef{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={Internet}
						}
					}
					neglist={
					}
				}
			}
			srv={
				ServiceRef{
					name={LAN-2-INTERNET:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any}
				}
			}
			action={
				ActionPass{
					name={LAN-2-INTERNET:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					conn={
						ConnRef{
							name={LAN-2-INTERNET:action:conn}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={Dynamic NAT}
						}
					}
					bothWays={0}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={1}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			p2ppolicy={1}
			p2poverride={1}
			p2pbits={-2,-1,-1,-1,-1,-1,524287,-2048}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={2}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={1}
			reversePolicy={1}
			matchIF={0}
		}
		Rule{
			name={LAN-2-LAN}
			readOnly={0}
			origin={}
			global={0}
			comment={Allows unrestricted communication between hosts on the trusted LAN networks}
			src={
				NetRef{
					name={LAN-2-LAN:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Trusted LAN}
				}
			}
			dst={
				NetRef{
					name={LAN-2-LAN:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Trusted LAN}
				}
			}
			srv={
				ServiceRef{
					name={LAN-2-LAN:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any}
				}
			}
			action={
				ActionPass{
					name={LAN-2-LAN:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					conn={
						ConnRef{
							name={LAN-2-LAN:action:conn}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={Original Source IP}
						}
					}
					bothWays={0}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={1}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			p2poverride={1}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={1}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={1}
			reversePolicy={1}
			matchIF={0}
		}
		Rule{
			name={LAN-2-VPN-SITE}
			readOnly={0}
			origin={}
			global={0}
			comment={Allows unrestricted communication between the trusted LAN networks and VPN site networks}
			src={
				NetRef{
					name={LAN-2-VPN-SITE:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Trusted LAN}
				}
			}
			dst={
				NetRef{
					name={LAN-2-VPN-SITE:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={VPN-Networks}
				}
			}
			srv={
				ServiceRef{
					name={LAN-2-VPN-SITE:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any}
				}
			}
			action={
				ActionPass{
					name={LAN-2-VPN-SITE:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					conn={
						ConnRef{
							name={LAN-2-VPN-SITE:action:conn}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={Original Source IP}
						}
					}
					bothWays={1}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={-NONE-}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={1}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={1}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
		}
		Rule{
			name={VPN-SITE-2-SITE}
			readOnly={0}
			origin={}
			global={0}
			comment={Allows unrestricted communication between hosts on VPN site networks}
			srcExplicit={
				NetSet{
					name={VPN-SITE-2-SITE:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					list={
						NetRef{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={VPN-Local-Networks}
						}
					}
					neglist={
					}
				}
			}
			dstExplicit={
				NetSet{
					name={VPN-SITE-2-SITE:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					list={
						NetRef{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={VPN-Remote-Networks}
						}
					}
					neglist={
					}
				}
			}
			srv={
				ServiceRef{
					name={VPN-SITE-2-SITE:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any}
				}
			}
			action={
				ActionPass{
					name={VPN-SITE-2-SITE:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					conn={
						ConnRef{
							name={VPN-SITE-2-SITE:action:conn}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={Original Source IP}
						}
					}
					bothWays={0}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={1}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={1}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
		}
		Rule{
			name={VPNCLIENTS-2-LAN}
			readOnly={0}
			origin={}
			global={0}
			comment={Allows unrestricted access for Barracuda Network Access Clients coming in through interface pvpn0 to the trusted LAN. Note that PPTP-based access is not included in this rule.}
			src={
				NetRef{
					name={VPNCLIENTS-2-LAN:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any}
				}
			}
			dst={
				NetRef{
					name={VPNCLIENTS-2-LAN:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Trusted LAN}
				}
			}
			srv={
				ServiceRef{
					name={VPNCLIENTS-2-LAN:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any}
				}
			}
			action={
				ActionPass{
					name={VPNCLIENTS-2-LAN:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					conn={
						ConnRef{
							name={VPNCLIENTS-2-LAN:action:conn}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={Dynamic NAT}
						}
					}
					bothWays={0}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={-NONE-}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={VPNClients}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={0}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={1}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			p2poverride={1}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={1}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={1}
			reversePolicy={1}
			matchIF={0}
		}
		Rule{
			name={BLOCKALL}
			readOnly={0}
			origin={}
			global={0}
			comment={Blocks all IP traffic}
			src={
				NetRef{
					name={BLOCKALL:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any}
				}
			}
			dst={
				NetRef{
					name={BLOCKALL:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any}
				}
			}
			srv={
				ServiceRef{
					name={BLOCKALL:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any}
				}
			}
			action={
				ActionBlock{
					name={BLOCKALL:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					serverity={0}
					sendDeny={0}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={-NONE-}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={0}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			p2poverride={1}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={-1}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={1}
			reversePolicy={1}
			matchIF={0}
		}
	}
	testobj={
	}
	subsets={
	}
	sublists={
	}
}
